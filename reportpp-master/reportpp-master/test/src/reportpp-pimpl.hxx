// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#ifndef REPORTPP_PIMPL_HXX
#define REPORTPP_PIMPL_HXX

#include "reportpp//parser/reportpp-pskel.hxx"

namespace reportpp
{
  class textElement_pimpl: public virtual textElement_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual void
    x (float);

    virtual void
    y (float);

    virtual void
    fontName (const ::std::string&);

    virtual void
    fontSize (long long);

    virtual void
    fontStyle (const ::std::string&);

    virtual void
    post_textElement ();
  };

  class shapeType_pimpl: public virtual shapeType_pskel,
    public ::xml_schema::string_pimpl
  {
    public:
    virtual void
    pre ();

    virtual ::reportpp::types::ShapeType
    post_shapeType ();
  };

  class shapeElement_pimpl: public virtual shapeElement_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    type (const ::reportpp::types::ShapeType&);

    virtual void
    x (float);

    virtual void
    y (float);

    virtual void
    width (float);

    virtual void
    height (float);

    virtual void
    post_shapeElement ();
  };

  class imageElement_pimpl: public virtual imageElement_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    src (const ::std::string&);

    virtual void
    x (float);

    virtual void
    y (float);

    virtual void
    width (float);

    virtual void
    height (float);

    virtual void
    post_imageElement ();
  };
}

#endif // REPORTPP_PIMPL_HXX
